<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <AvaloniaUseCompiledBindingsByDefault>false</AvaloniaUseCompiledBindingsByDefault>
    <AssemblyName>LegionToolkit</AssemblyName>
    <RootNamespace>LenovoLegionToolkit.Avalonia</RootNamespace>
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>true</SelfContained>
    <PublishTrimmed>false</PublishTrimmed>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <JsonSerializerIsReflectionEnabledByDefault>true</JsonSerializerIsReflectionEnabledByDefault>
    <Version>3.0.0</Version>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <FileVersion>3.0.0.0</FileVersion>
    <Company>Legion Toolkit Community</Company>
    <Product>Legion Toolkit for Linux</Product>
    <Description>Comprehensive system management for Lenovo Legion laptops on Linux</Description>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <DefineConstants>$(DefineConstants);LINUX;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <DefineConstants>$(DefineConstants);LINUX;RELEASE</DefineConstants>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>$(DefineConstants);LINUX;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>$(DefineConstants);LINUX;RELEASE</DefineConstants>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
  </ItemGroup>

  <!-- Include Resources for Linux packaging -->
  <ItemGroup>
    <Content Include="Resources\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.0.10" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.10" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.10" />
    <PackageReference Include="Avalonia.Fonts.Inter" Version="11.0.10" />
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.10" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.10" />
    <PackageReference Include="Avalonia.Controls.DataGrid" Version="11.0.10" />
    <PackageReference Include="SkiaSharp" Version="2.88.8" />
    <PackageReference Include="SkiaSharp.NativeAssets.Linux" Version="2.88.8" />
    <PackageReference Include="HarfBuzzSharp" Version="7.3.0.2" />
    <PackageReference Include="HarfBuzzSharp.NativeAssets.Linux" Version="7.3.0.2" />
    <PackageReference Include="System.Text.Json" Version="8.0.5" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="8.0.0" />
    <PackageReference Include="ReactiveUI" Version="19.5.41" />
    <PackageReference Include="System.Reactive" Version="6.0.0" />
    <PackageReference Include="System.Reactive.Linq" Version="6.0.0" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="System.IO.Abstractions" Version="21.0.2" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Views\**\*.axaml.cs">
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- Linux-specific build optimizations -->
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <UseAppHost>true</UseAppHost>
    <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
    <PublishTrimmed>false</PublishTrimmed>
    <JsonSerializerIsReflectionEnabledByDefault>true</JsonSerializerIsReflectionEnabledByDefault>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <SuppressTrimAnalysisWarnings>true</SuppressTrimAnalysisWarnings>
    <IsTrimmable>false</IsTrimmable>
    <EnableUnsafeBinaryFormatterSerialization>true</EnableUnsafeBinaryFormatterSerialization>
  </PropertyGroup>

  <!-- Additional JSON serializer configuration for all platforms -->
  <PropertyGroup>
    <JsonSerializerIsReflectionEnabledByDefault>true</JsonSerializerIsReflectionEnabledByDefault>
    <EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
    <InvariantGlobalization>false</InvariantGlobalization>
    <!-- Force native library inclusion -->
    <CopyNativeLibrariesFromPackages>true</CopyNativeLibrariesFromPackages>
    <IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
    <!-- Disable AOT and trimming completely for reflection support -->
    <PublishAot>false</PublishAot>
    <PublishReadyToRun>false</PublishReadyToRun>
    <TieredCompilation>true</TieredCompilation>
    <TieredPGO>false</TieredPGO>
  </PropertyGroup>

  <!-- Native library references for explicit inclusion -->
  <ItemGroup>
    <Content Include="runtimeconfig.template.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- Force include native assets for Linux -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <NativeLibrary Include="$(NuGetPackageRoot)skiasharp.nativeassets.linux\2.88.8\runtimes\linux-x64\native\*" />
    <NativeLibrary Include="$(NuGetPackageRoot)harfbuzzsharp.nativeassets.linux\7.3.0.2\runtimes\linux-x64\native\*" />
  </ItemGroup>

</Project>